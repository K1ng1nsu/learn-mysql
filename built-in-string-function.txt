1. CONCAT, concat(x,y,z);       X+y+z 

# 합치기기
SELECT * , concat(author_fname, ' ', author_lname) as full_name 
FROM books;

2. CONCAT_WS(구분자, x, y, z);      xyz사이에 구분자를 넣음

# 스페이스를 구분자로 넣고 합치기
SELECT * , concat_ws(' ',author_fname,author_lname) as full_name 
FROM books;


3. SUBSTRING, substring(str, start_index, length), substring(str, start_index)  => substr() 이랑 같은거임
- 인덱스는 1부터 시작함 ( 일반적인 프로그래밍 처럼 0이 아닌)

- SELECT substring('12345', 1,3 ); => 123

# 시작부터 끝까지 감
- SELECT substring('12345', 2);  => 2345

- SELECT substring('12345', -1 );  => 5

- SELECT substring('12345', -2, 2 ); => 45

- SELECT substring('12345', -2, 1 ); => 4

# 앞에서 15글자만 
SELECT substring(title,1,15) AS title 
FROM books;

# 앞에서 1글자만
SELECT substring(author_lname, 1, 1) AS initial
FROM books;

# 활용
SELECT concat(substr(title,1,10),'...') as short_title
FROM books;

# 활용
SELECT concat(
    substr(author_fname,1,1),  -- 1
    '.',                       -- 2
    substr(author_lname,1,1),  -- 3
    '.'                        -- 4
    ) as author_initial
FROM books;

4. REPLACE , replace(str, from_str, to_str)

- SELECT replace('Hello', 'll', 'LL'); => HeLLo

5. REVERSE, reverse(str)    => trs

- SELECT reverse('12345');  => 54321

6. CHAR_LENGTH, char_length(str) => 문자열 길이를 리턴함
# LENGTH(str) => 바이트 길이 리턴함

- SELECT length('대한민국'); => 12바이트 아스키코드(1바이트) 아니면 1글자에 3바이트트


- SELECT char_length('대한민국'); => 4


7. UPPER, LOWER, upper(str), lower(str)  => upper = ucase , lower = lcase

- SELECT upper('Hello'); => HELLO

- SELECT ucase('Hello'); => HELLO

- SELECT lower('Hello'); => hello

- SELECT lcase('Hello'); => hello

8. INSERT, insert(str, num_from_str, num_delete_org_str, insert_str)

- SELECT insert('Hello World', 7, 1, 'There '); => Hello There World

- SELECT insert('123456789', 2, 2, 'hi'); => 1hi456789

9. LEFT, left(str, len) , substr 대체

- SELECT left('123456789', 5); => 12345

10. RIGHT, right(str, len), substr 대체

- SELECT right('123456789', 5); => 56789


11. REPEAT, repeat(str, count)

- SELECT repeat('1', 3); => 111

12. TRIM, trim(str)

- SELECT trim('  111  '); => 111

- SELECT trim( LEADING 'x' FROM 'xxx111xxx');  => 111xxx
- SELECT trim( BOTH 'x' FROM 'xxx111xxx');     => 111
- SELECT trim( TRAILING 'x' FROM 'xxx111xxx'); => xxx111


# 사용할 데이터
CREATE DATABASE book_shop;

USE book_shop;

CREATE TABLE books 
	(
		book_id INT NOT NULL AUTO_INCREMENT,
		title VARCHAR(100),
		author_fname VARCHAR(100),
		author_lname VARCHAR(100),
		released_year INT,
		stock_quantity INT,
		pages INT,
		PRIMARY KEY(book_id)
	);

INSERT INTO books (title, author_fname, author_lname, released_year, stock_quantity, pages)
VALUES
('The Namesake', 'Jhumpa', 'Lahiri', 2003, 32, 291),
('Norse Mythology', 'Neil', 'Gaiman',2016, 43, 304),
('American Gods', 'Neil', 'Gaiman', 2001, 12, 465),
('Interpreter of Maladies', 'Jhumpa', 'Lahiri', 1996, 97, 198),
('A Hologram for the King: A Novel', 'Dave', 'Eggers', 2012, 154, 352),
('The Circle', 'Dave', 'Eggers', 2013, 26, 504),
('The Amazing Adventures of Kavalier & Clay', 'Michael', 'Chabon', 2000, 68, 634),
('Just Kids', 'Patti', 'Smith', 2010, 55, 304),
('A Heartbreaking Work of Staggering Genius', 'Dave', 'Eggers', 2001, 104, 437),
('Coraline', 'Neil', 'Gaiman', 2003, 100, 208),
('What We Talk About When We Talk About Love: Stories', 'Raymond', 'Carver', 1981, 23, 176),
("Where I'm Calling From: Selected Stories", 'Raymond', 'Carver', 1989, 12, 526),
('White Noise', 'Don', 'DeLillo', 1985, 49, 320),
('Cannery Row', 'John', 'Steinbeck', 1945, 95, 181),
('Oblivion: Stories', 'David', 'Foster Wallace', 2004, 172, 329),
('Consider the Lobster', 'David', 'Foster Wallace', 2005, 92, 343);

drop table books;

DESC books;

SELECT * FROM books;


