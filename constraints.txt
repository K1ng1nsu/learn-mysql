1. PRIMARY KEY
2. FOREIGN KEY
3. UNIQUE
4. NOT NULL
5. CHECK
6. DEFAULT

--- 테이블 생성시

-- 1. PRIMARY KEY
CREATE TABLE users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL
);

-- 2. FOREIGN KEY

CREATE TABLE orders (
    order_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);


-- 3. UNIQUE KEY
CREATE TABLE products (
    product_id INT AUTO_INCREMENT PRIMARY KEY,
    product_code VARCHAR(50) UNIQUE
);

-- 4. NOT NULL
CREATE TABLE employees (
    employee_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL
);

-- 5. DEFAULT
CREATE TABLE settings (
    setting_id INT AUTO_INCREMENT PRIMARY KEY,
    status VARCHAR(20) DEFAULT 'active'
);

-- 6. CHECK
CREATE TABLE accounts (
    account_id INT AUTO_INCREMENT PRIMARY KEY,
    balance DECIMAL(10, 2),
    CHECK (balance >= 0)
);

--- 생성 이후

MySQL에서 지원하는 제약 조건 추가 종류 (ALTER TABLE 기준)

    PRIMARY KEY 추가
    FOREIGN KEY 추가
    UNIQUE 추가
    CHECK 추가 (MySQL 8.0.16 이상)





-- 1. PRIMARY KEY
ALTER TABLE users
ADD PRIMARY KEY (user_id);


-- 2. FOREIGN KEY
ALTER TABLE orders
ADD CONSTRAINT fk_user
FOREIGN KEY (user_id) REFERENCES users(user_id)

-- 3. UNIQUE
ALTER TABLE products
ADD UNIQUE (product_code);

-- 4. NOT NULL // 직접적으로 추가는 안되고 컬럼 수정해야함 
ALTER TABLE table_name
MODIFY column_name column_type NOT NULL;

ALTER TABLE employees
MODIFY name VARCHAR(100) NOT NULL;


-- 5. CHECK
ALTER TABLE accounts
ADD CONSTRAINT chk_balance CHECK (balance >= 0);

-- 6. DEFAULT  // 직접적으로 추가는 안되고 컬럼 수정해야함 
ALTER TABLE table_name
ALTER COLUMN column_name SET DEFAULT default_value;

ALTER TABLE settings
MODIFY status VARCHAR(20) DEFAULT 'active';
